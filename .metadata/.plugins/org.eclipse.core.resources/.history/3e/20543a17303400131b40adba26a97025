package aufgabe_2;

	import java.util.Scanner;

import org.amcgala.TurtleMode;
import org.apache.commons.math3.analysis.function.Sqrt;
import org.jboss.netty.buffer.TruncatedChannelBuffer;
	

	public class Main extends TurtleMode{
		
		static float houseWidth;
		static float doorStartPosition;
		static float houseHeight;

	@Override public void turtleCommands() {
		
		//Height of the roof, can be changed, should be 100.
		final float roofHeight = 100;
		//Height of the door, should not be changed and stay at 40!
		final float doorHeight = 40;
		
		/*Draw Background (RAW) */
		//TODO: More details
		up();
		turnRight(90);
		move(250);
		turnLeft(90);
		down();
		move(50);
		turnLeft(50);
		move(200);
		turnRight(100);
		move(200);
		turnLeft(50);
		move(500);
		
		
		/*Draw House (BETA)*/
		//TODO: Windows
		
		//Go where House should start
		up();
		turnRight(90);
		move(300);
		turnRight(90);
		move(50);
		down();
		
		//Draw House
		move(houseWidth); //breite
		turnRight(90);
		move(houseHeight); //hoehe
		turnRight(90);
		move(houseWidth); //breite
		turnRight(90);
		move(houseHeight); //hoehe
		
		//Calculate values needed for roof
		float roofSideLength = roofSideLength(houseWidth, roofHeight);
		float bottomAngle = bottomAngle(roofHeight, roofSideLength);
		float topAngle = topAngle(bottomAngle);

		//Move to where roof should start
		up();
		turnRight(180);
		move(houseHeight);
		turnLeft(bottomAngle);
		
		//Draw roof
		down();
		move(roofSideLength);
		turnLeft(topAngle);
		move(roofSideLength);
		up();
		
		//Door (fixed starting point) TODO: Fix
		//TODO: Make variable
		
		doorStartPosition = (houseWidth / 2) + 33;
		up();
		turnLeft(180-bottomAngle-topAngle);
		move(houseHeight);
		turnLeft(90);
		move(doorStartPosition);
		turnLeft(90);
		down();
		move(doorHeight);
		turnLeft(90);
		move(33);
		turnLeft(90);
		move(doorHeight);
		
		
		//Windows (fixed amount)
		//TODO: Finish
		up();
		turnLeft(90);
		move(56);
		turnLeft(90);
		move(55);
		turnLeft(90);
		move(10);
		down();
		move(30);
		
		
		
		

		

		
		

	}

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		houseWidth = 300; // TODO: maximal 400!
		houseHeight = 100; //TODO: maximale Höhe bestimmen (4 Stockwerke?)
		
		//System.out.println("Bitte Zahl eingeben: ");
		//int test = in.nextInt();
		new Main();

	}
	
	/**
	 * Calculates the length of the sides of the roof.
	 * Uses Pythagoras.
	 * @param houseWidth width of the house
	 * @param houseHeight height of the house
	 * @return length of one roof side
	 */
	public float roofSideLength (float houseWidth, float houseHeight) {
		
		
		float width = houseWidth/2;
		float roofSideLength = (float) Math.sqrt(houseHeight*houseHeight + width*width);
		
		
		return roofSideLength;
	}
	
	
	/**
	 * Calculates the Angles at the bottom of the roof.
	 * Uses the formula sin(a) = gk/hyp <=> asin(gk/hyp) = a
	 * @param houseHeight height of the house
	 * @param roofSideLength length of one side of the roof
	 * @return the bottom angle
	 */
	public float bottomAngle (float houseHeight, float roofSideLength) {
		
		
		float gk = houseHeight;
		float hyp = roofSideLength;
		float sinBot = gk/hyp;
		float bottomAngle =(float) ((float) 90-  (Math.asin(sinBot)) * (180/Math.PI));
		
		
		
		return bottomAngle;
	}
	
	/**
	 * Calculates the angle at the top of the roof.
	 * @param bottomAngle bottom angle
	 * @return top angle
	 */
	public float topAngle(float bottomAngle){
		
		float topAngle = 180 - 2*bottomAngle;
	
		return topAngle;
		
	}
	}

